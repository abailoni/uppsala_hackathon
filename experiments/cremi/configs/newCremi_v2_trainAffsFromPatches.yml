loaders:
  general:
    master_config:
      downscale_and_crop:
        # Inputs:
        - {ds_factor: [1, 1, 1],
           crop_factor: [1, 2, 2],
           apply_to: 0}
        - {ds_factor: [1, 2, 2],
           crop_factor: [1, 1, 1],
           apply_to: 0}
        # Targets:
        - {ds_factor: [1, 1, 1],
           crop_factor: [1, 2, 2],
           apply_to: 1}
#        - {ds_factor: [1, 2, 2],
#           crop_factor: [1, 1, 1],
#           apply_to: 1}
#        - {ds_factor: [1, 4, 4],
#           crop_factor: [1, 1, 1],
#           apply_to: 1}
      affinity_config:
        global:
          retain_mask: True # This keep a mask of the valid affinities (not involving the ignore-label)
          retain_segmentation: True # This keeps the label image in the inputs
          ignore_label: 0
          glia_label: 1
          boundary_label: 2
        0:
          retain_glia_mask: False
          offsets:
            # Short-ranges:
            - [-1, 0, 0]
            - [0, -1, 0]
            - [0, 0, -1]
            # Mid-ranges:
            - [0, -5, 0]
            - [0, 0, -5]
            - [0, -5, -5]
            - [0, 5, -5]
            - [-1, -5, 0]
            - [-1, 0, -5]
            - [-1, -5, -5]
            - [-1, 5, -5]
            # 3D-ranges:
            - [-2, 0, 0]
            - [1, 0, 0]
            - [2, 0, 0]
            # Long-ranges:
            - [0, -14, 0]
            - [0, 0, -14]


model:
  model_class: embeddingutils.models.unet.AffinitiesFromEmb
  model_kwargs:
    loadfrom: "$HCI_HOME/pyCharm_projects/uppsala_hackathon/experiments/cremi/runs/v2_main_trainAffs/checkpoint.pytorch"
    nb_offsets: 16
    prediction_indices: [0,1,2]
    final_layer_kwargs:
      kernel_size: [1, 1, 1]
      dim: 3
      activation: "ReLU"
      num_groups_norm: 16
      normalization: "GroupNorm"
      # dilation: [1, 4, 4]
    train_backbone: False
    reload_backbone: True


trainer:
  criterion:
    loss_name: "vaeAffs.models.losses.MultiLevelAffinityLoss"
    kwargs:
      loss_type: "Dice" # "MSE"
      target_has_label_segm: True
      train_glia_mask: False

      apply_checkerboard: "KeyDeleter"
      glia_label: "KeyDeleter"
      boundary_label: "KeyDeleter"
      defected_label: "KeyDeleter"

      predictions_specs:
        0:
          target: 0
          affs_channels: ":"


firelight:
  pcaEmbeddings_lvl0: "KeyDeleter"
  pcaEmbeddings_lvl1: "KeyDeleter"
  pcaEmbeddings_lvl2: "KeyDeleter"
  glia_mask: "KeyDeleter"

  affinities:
    ImageGridVisualizer:

      input_mapping:
        global: [B: 0, D: "3:9"] # the mapping specified in 'global' is applied to all keys

      pad_width: 1  # width of the border between images in pixels
      pad_value: .2  # intensity of the border pixels
      upsampling_factor: 1  # the whole grid is upsampled by this factor

      row_specs: ['H', 'S', 'B', 'C', 'V']
      column_specs: ['W', 'D']

      visualizers:

        - SegmentationVisualizer:
            input: ['target', index: 0, C: 0, W: "8:-8", H: "8:-8"]
            background_label: 0
        - IdentityVisualizer:
            input: ['inputs', index: 0, W: "8:-8", H: "8:-8"]
            cmap: gray
        - IdentityVisualizer:
            input: ['prediction', index: 0, C: ":"]
            cmap: gray
            value_range: [0,1]
